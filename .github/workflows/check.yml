name: Check
on:
  pull_request:
  push:
    tags:
      - v*.*.*
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        id: setup-haskell
        with:
          ghc-version: 8.10.7
      - run: cabal freeze
      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: hashFiles('cabal.project.freeze')
      - run: cabal build
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        id: setup-haskell
        with:
          ghc-version: 8.10.7
      - run: cabal freeze
      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: hashFiles('cabal.project.freeze')
      - run: cabal test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/hlint-setup@v1
      - uses: haskell/actions/hlint-run@v1
        with:
          path: '["lib/", "cli/"]'
  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # stylish-haskell doesn't have a check/dry run option, so we'll run it
      # against files in place and test if there are any diffs with Git.
      - run: |
          curl -sL https://raw.github.com/haskell/stylish-haskell/master/scripts/latest.sh | sh -s 'lib/ src/ test/ -ri'
          git diff-index --exit-code HEAD
  build_binary:
    name: Build Binary
    strategy:
      matrix:
        os:
          [
            { name: "linux", runner: "ubuntu-latest" },
            { name: "macos", runner: "macos-latest" },
          ]
    runs-on: ${{ matrix.os.runner }}
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs: [build, test, lint]
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        id: setup-haskell
        with:
          ghc-version: 8.10.7
      - run: cabal freeze
      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: hashFiles('cabal.project.freeze')
      - name: Build
        run: |
          cabal install exe:intlc --install-method=copy --overwrite-policy=always --installdir=dist-newstyle
          mv dist-newstyle/intlc "dist-newstyle/intlc_${{ matrix.os.name }}"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: "dist-newstyle/intlc_${{ matrix.os.name }}"
